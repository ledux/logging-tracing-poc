version: '3.3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    logging:
      driver: none

  broker:
    image: confluentinc/cp-enterprise-kafka:latest
    hostname: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    expose:
      - 9092
      - 29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:9092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
    logging:
      driver: none

  mongodb:
    image: mongo:latest
    ports:
      - 27017:27017
    expose:
      - 27017
    logging:
      driver: none

  jaeger-agent:
    image: jaegertracing/jaeger-agent:1.14
    environment:
      - SPAN_STORAGE_TYPE=elasticsearch
    command: --reporter.grpc.host-port=jaeger-collector:14250
    depends_on:
      - "jaeger-collector"
    restart: unless-stopped
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778/tcp"
    expose:
      - "5775"
      - "6831"
      - "6832"
      - "5778"
    logging:
      driver: none

  jaeger-collector:
    image: jaegertracing/jaeger-collector:1.14
    restart: unless-stopped
    ports:
      - "14267:14267" # transport: TChannel - used by jaeger-agent to send spans in jaeger.thrift format
      - "14250:14250" # transport: gRPC     - used by jaeger-agent to send spans in model.proto format
      - "14268:14268" # transport: HTTP     - can accept spans directly from clients in jaeger.thrift format over binary thrift protocol
      - "9411:9411"   # transport: HTTP     - can accept Zipkin spans in JSON or Thrift (disabled by default)
      - "14269:14269" # transport: HTTP     - Health check at /
    expose:
      - "14267"
      - "14250"
      - "14268"
      - "9411"
      - "14269"
    environment:
      SPAN_STORAGE_TYPE: elasticsearch
      ES_SERVER_URLS: http://elasticsearch:9200
    logging:
      driver: none

  jaeger-query:
    image: jaegertracing/jaeger-query:1.14
    restart: unless-stopped
    ports:
      - "16686:16686" # transport: HTTP - /api/* endpoints and Jaeger UI at /
      - "16687:16687" # transport: gRPC  - Health check at /
    expose:
      - "16686"
    environment:
      SPAN_STORAGE_TYPE: elasticsearch
      ES_SERVER_URLS: http://elasticsearch:9200
    logging:
      driver: none

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.15.1
    environment:
    - 'discovery.type=single-node'
    ports:
    - "9200:9200"
    expose:
    - "9200"
    logging:
      driver: none

  kibana:
    image: docker.elastic.co/kibana/kibana:7.15.1
    environment:
      - "ELASTICSEARCH_HOSTS=http://elasticsearch:9200"
    ports:
      - "5601:5601"
    logging:
      driver: none
